[{"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\index.js":"1","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\App.js":"2","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\NewExpense\\NewExpense.js":"3","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\Expenses.js":"4","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\NewExpense\\ExpenseForm.js":"5","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpenseItem.js":"6","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\UI\\Card.js":"7","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpenseDate.js":"8","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpensesFilter.js":"9"},{"size":179,"mtime":1660705389273,"results":"10","hashOfConfig":"11"},{"size":935,"mtime":1662948874498,"results":"12","hashOfConfig":"11"},{"size":791,"mtime":1662946585861,"results":"13","hashOfConfig":"11"},{"size":1180,"mtime":1662948875870,"results":"14","hashOfConfig":"11"},{"size":3116,"mtime":1662696530498,"results":"15","hashOfConfig":"11"},{"size":602,"mtime":1662698565139,"results":"16","hashOfConfig":"11"},{"size":180,"mtime":1661810190908,"results":"17","hashOfConfig":"11"},{"size":517,"mtime":1660877010013,"results":"18","hashOfConfig":"11"},{"size":653,"mtime":1662698203301,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1os2wk6",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\index.js",[],["40","41"],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\App.js",["42"],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\NewExpense\\NewExpense.js",[],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\Expenses.js",["43"],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\NewExpense\\ExpenseForm.js",["44"],"import react, { useState } from \"react\";\r\n// this returns the actual form that is going to be wrapped in a div\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\"); // used to store update title\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\"); // used to store amount\r\n  const [enteredDate, setEnteredDate] = useState(\"\"); // used to store date\r\n\r\n  // NOTE 33: FOR MULTIPLE ITEMS IN ONE STATE\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  // functions to call on event handlers\r\n  function titleChangeHandler(event) {\r\n    // called by onChange (every key stroke), event is typicall Javascript that contains lots of values/params\r\n    setEnteredTitle(event.target.value); // on each call update the stored title with the event -> value which holds the user input\r\n\r\n    // NOTE 33: USED FOR ONE STATE MULTIPLE ITEMS\r\n    // setUserInput((prevState) => {\r\n    //   return {...prevState, enteredTitle: event.target.value};\r\n    // });\r\n  }\r\n\r\n  // alt definition format\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    // what do do when you hit submit\r\n    event.preventDefault(); // used to prevent refresh of page\r\n    const expenseData = {\r\n      // create object with all form input values\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData); // custom listener event passed on through props on parent component, used to send data up\r\n\r\n    setEnteredTitle(\"\"); // reset entered inputs. needs a 2 way binding set up which is value attribute on <input>\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle} // this is the 2 way bind here\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount} // 2 way bind used to reset values on submit\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2023-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\UI\\Card.js",[],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\Martin\\Desktop\\ReactSchool\\Expense-Tracker\\src\\components\\Expenses\\ExpensesFilter.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]